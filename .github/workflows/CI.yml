name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:

permissions:
  contents: read

jobs:
  ci-posix:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # TODO: PyTorch compilation fails on macOS x86_64
          # - python: "3.10"
          #   runner: macos-13 # macOS-X64
          # - python: "3.10"
          #   runner: "macos-14" # macOS-ARM64
          - python: "3.12"
            runner: "macos-14" # macOS-ARM64
          # - python: "3.10"
          #   runner: "ubuntu-22.04" # Linux-X64
          # TODO: It stops compiling with Rust on Windows and fails
          # - python: "3.10"
          #   runner: "windows-2022" # Windows-X64
    steps:
      - name: "Platform: ${{ runner.os }}-${{ runner.arch }}"
        run: echo "I'm running on ${{ runner.os }}-${{ runner.arch }}!"

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - name: "Run Custom CI Scripts"
        run: python scripts/x_ci.py

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ runner.os }}-${{ runner.arch }}
          path: dist

  release-github:
    name: Release on GitHub
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ci-posix]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}

  release-pypi:
    name: Release on PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ci-posix]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist
          repository-url: https://test.pypi.org/legacy/
