name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - "*"
  pull_request:

permissions:
  contents: read

jobs:
  ci-github:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # - python: '3.10'
          #   runner: macos-13 # PyTorch compilation fails on macOS x86_64
          # - python: '3.10'
          #   runner: macos-14
          # - python: '3.10'
          #   runner: ubuntu-22.04
          - python: "3.12"
            runner: windows-2022
    steps:
      - name: "Platform: ${{ runner.os }}-${{ runner.arch }}"
        run: echo "I'm running on ${{ runner.os }}-${{ runner.arch }}!"

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"

      - name: "Custom CI: Clear"
        run: python scripts/x_clear.py

      - name: "Custom CI: Prepare"
        run: python scripts/x_prepare.py

      - name: "Custom CI: Format"
        run: python scripts/x_format.py

      - name: "Custom CI: Build (PyO3)"
        run: python scripts/x_build_pyo3.py

      - name: "Custom CI: Test"
        run: python scripts/x_test.py

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ runner.os }}-${{ runner.arch }}
          path: dist

  # release-github:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   _if: startsWith(github.ref, 'refs/tags/')
  #   needs: [ci-github]
  #   steps:
  #     - uses: actions/download-artifact@v4
  #     - uses: softprops/action-gh-release@v2
  #       with:
  #         files: McHateBot_emerald.{{ github.ref_name }}.zip

  #     - name: Publish to PyPI
  #       uses: PyO3/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: {{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --non-interactive --skip-existing wheels-*/*
